name: mongo-sharding

services:
  configSrv:
    container_name: configSrv
    image: mongo:latest
    restart: always
    depends_on:
      - shard1
      - shard2
    volumes:
      - config-data:/data/db
    command: [
      "--configsvr",
      "--replSet",
      "config_server",
      "--bind_ip_all",
      "--port",
      "27019"
    ]
    healthcheck:
        test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
        interval: 5s
        start_period: 10s

  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    volumes:
      - shard1-data:/data/db
    command: [
      "--shardsvr",
      "--replSet",
      "shard1",
      "--bind_ip_all",
      "--port",
      "27018"
    ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    volumes:
      - shard2-data:/data/db
    command: [
      "--shardsvr",
      "--replSet",
      "shard2",
      "--bind_ip_all",
      "--port",
      "27018"
    ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    depends_on:
      - configSrv
    command: [
      "mongos",
      "--configdb", 
      "config_server/configSrv:27019",
      "--bind_ip_all",
      "--port",
      "27020"
    ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  pymongo_api:
    container_name: pymongo_api
    build: 
      context: ../api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"

volumes:
  config-data:
  shard1-data:
  shard2-data: